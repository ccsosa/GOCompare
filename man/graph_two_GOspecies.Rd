% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph_two_GOspecies.R
\name{graph_two_GOspecies}
\alias{graph_two_GOspecies}
\title{Undirected network representation  for the results of functional
 enrichment analysis to compare two species and a series of categories}
\usage{
graph_two_GOspecies(
  x,
  species1,
  species2,
  GOterm_field,
  saveGraph = FALSE,
  option = "Categories",
  numCores = 2,
  outdir = NULL,
  filename = NULL
)
}
\arguments{
\item{x}{is a list obtained as output of the comparegOspecies function}

\item{species1}{This is a string with the species name for species 1 (e.g; "H. sapiens")}

\item{species2}{This is a string with the species name for species 2 (e.g; "A. thaliana")}

\item{GOterm_field}{This is a string with the column name of the GO terms (e.g; "Functional_Category")}

\item{saveGraph}{logical, if \code{TRUE} the function will allow save the graph in graphml format}

\item{option}{(values: "Categories or "GO"). This option allows create either a graph
where nodes are GO terms and edges are features and GO as well as species belonging are edges attributes or
a graph where nodes are GO terms and edges are species belonging  (default value="Categories")}

\item{numCores}{numeric, Number of cores to use for the process (default value numCores=2). For the example below, only one core will be used}

\item{outdir}{This parameter will allow save the graph file in a folder described here (e.g: "D:").This parameter only
works when saveGraph=TRUE}

\item{filename}{The name of the graph filename to be saved in the outdir detailed by the user.This parameter only
works when saveGraph=TRUE}
}
\value{
This function will return a list with two slots: edges and nodes. Edges represent an edge list and their weights and
 nodes which represent the nodes and their respective weights (weights, shared,combined).
}
\description{
graph_two_GOspecies is a function to create undirected graphs
 \loadmathjax

 The graph_two_GOspecies is an analog of the graphGOspecies function, and it has the same options (" Categories " and " GO ").
 Nevertheless, the way in which the edge and node weights are calculated is slightly different. Since two species are compared,
 three possible graphs are available \({G}_1,\, {G}_2\), and \({G}_3 \). \({G}_1\), and \({G}_2 \)represent each of the species analyzed
 and \({G}_3\) is a subgraph of \({G}_1,\, {G}_2\), which contains the GO terms or Categories co-ocurring between both species.

 Categories option:
 (Weight): The nodes (V) represent groups of gene lists (categories), and the edges (E) represent GO terms shared between pairs of categories
 and the weight of the nodes provides a measure of how a GO term is conserved between two species and a series of categories but it is biased
 to categories.
 \mjsdeqn{\hat{K}_w(u)=\sum_{v \epsilon V_1}^{}w(u,v) + \sum_{v \epsilon V_2}^{}w(u,v)} (5)

(shared weight): The nodes (V) represent groups of gene lists (categories), and the edges (E) represent GO terms shared between pairs of categories that are only
 shared between species. This node weight provides a measure of how a GO term is conserved between two species.
 to categories.

 \mjsdeqn{w(e) = \frac{\mid BP_{u} \cap BP_{v}\mid if \ shared \ between \ species }{\mid BP\mid}} (4)

 \mjsdeqn{\hat{K}_w(u)=\sum_{v \epsilon V_1}^{}w(u,v) + \sum_{v \epsilon V_2}^{}w(u,v)} (5)

 (combined weight): This node weight is a combination of  weight and shared weight. The the idea of this index is to find categories more relevant with a balance
  of GO terms shared among gene lists (categories) and the two species analyzed. It varies from -1 (categories with GO terms found only in one species) to 1
  (categories with GO terms shared widely between species and among other categories)

 \mjsdeqn{\hat K_w(u)=\frac{\hat K_w(u)}{max(\hat K_w(u))}} (6)
 \mjsdeqn{\hat K_ws(u)=\frac{\hat K_ws(u)}{max(\hat K_ws(u))}} (7)
 \mjsdeqn{CK_w(u)= \hat K_w(u) + \hat K_ws(u) - 1 } (8)


 GO option:
  Nodes are features and edges are GO terms available in the set of graphs (k) which consist of each species graphs and a shared GO terms graph (k).
 Two edges weights are calculated. First, edges weights are calculated as number of BP in the feature in comparison with the total number of GO terms available (3).
 Second, a shared weight is calculated for interactions shared between two species. Finally, node weights are calculated as the sum of all w(e) where the node is a participant (2) in each  species and a shared GO terms(k) graphs

 \deqn{w(e) = \frac{|BP(U) n BP(V)|}{|nBP|}}{%
 w(e) = |BP(U) n BP(V)| / |nBP| (3)}

 \deqn{K_w(U) =  \sum(\sum(w(U,V)k=,1,k))}{%
 K_w(U) =  sum(sum(w(U,V),k=,1,k)) (4)}
}
\examples{

GOterm_field <- "Functional_Category"
data(comparison_ex_compress_CH)
#Defining the species names
species1 <- "H. sapiens"
species2 <- "A. thaliana"
x_graph <- graph_two_GOspecies(x=comparison_ex_compress_CH,
          species1=species1,
          species2=species2,
          GOterm_field=GOterm_field,
          numCores=1,
          saveGraph = FALSE,
          option= "Categories",
          outdir = NULL,
          filename= NULL)

}
